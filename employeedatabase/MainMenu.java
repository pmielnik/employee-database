package employeedatabase;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Patricia
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainMenuPanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        button_addEmp = new javax.swing.JButton();
        button_searchEmp = new javax.swing.JButton();
        button_removeEmp = new javax.swing.JButton();
        button_displayEmp = new javax.swing.JButton();
        button_editEmp = new javax.swing.JButton();
        button_saveEmp = new javax.swing.JButton();
        button_loadEmp = new javax.swing.JButton();
        button_exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        mainMenuPanel.setBackground(new java.awt.Color(204, 204, 204));

        menuPanel.setBackground(new java.awt.Color(204, 204, 204));

        titleLabel.setFont(new java.awt.Font("Avenir Next", 0, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(102, 102, 102));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel.setText("EMPLOYEE DATABASE");

        buttonPanel.setBackground(new java.awt.Color(204, 204, 204));

        button_addEmp.setFont(new java.awt.Font("Avenir Next", 0, 13)); // NOI18N
        button_addEmp.setForeground(java.awt.Color.darkGray);
        button_addEmp.setText("Add Employee");
        button_addEmp.setBorderPainted(false);
        button_addEmp.setContentAreaFilled(false);
        button_addEmp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        button_addEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExitedB1(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnteredB1(evt);
            }
        });
        button_addEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addEmpActionPerformed(evt);
            }
        });

        button_searchEmp.setFont(new java.awt.Font("Avenir Next", 0, 13)); // NOI18N
        button_searchEmp.setForeground(java.awt.Color.darkGray);
        button_searchEmp.setText("Search Datatbase");
        button_searchEmp.setBorderPainted(false);
        button_searchEmp.setContentAreaFilled(false);
        button_searchEmp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        button_searchEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExitedB2(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnteredB2(evt);
            }
        });
        button_searchEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_searchEmpActionPerformed(evt);
            }
        });

        button_removeEmp.setFont(new java.awt.Font("Avenir Next", 0, 13)); // NOI18N
        button_removeEmp.setForeground(java.awt.Color.darkGray);
        button_removeEmp.setText("Remove Employee");
        button_removeEmp.setBorderPainted(false);
        button_removeEmp.setContentAreaFilled(false);
        button_removeEmp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        button_removeEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExitedB3(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnteredB3(evt);
            }
        });
        button_removeEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_removeEmpActionPerformed(evt);
            }
        });

        button_displayEmp.setFont(new java.awt.Font("Avenir Next", 0, 13)); // NOI18N
        button_displayEmp.setForeground(java.awt.Color.darkGray);
        button_displayEmp.setText("Display All Employees");
        button_displayEmp.setBorderPainted(false);
        button_displayEmp.setContentAreaFilled(false);
        button_displayEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        button_displayEmp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        button_displayEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExitedB4(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnteredB4(evt);
            }
        });
        button_displayEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_displayEmpActionPerformed(evt);
            }
        });

        button_editEmp.setFont(new java.awt.Font("Avenir Next", 0, 13)); // NOI18N
        button_editEmp.setForeground(java.awt.Color.darkGray);
        button_editEmp.setText("Edit Employee Information");
        button_editEmp.setBorderPainted(false);
        button_editEmp.setContentAreaFilled(false);
        button_editEmp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        button_editEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExitedB5(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnteredB5(evt);
            }
        });
        button_editEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_editEmpActionPerformed(evt);
            }
        });

        button_saveEmp.setFont(new java.awt.Font("Avenir Next", 0, 13)); // NOI18N
        button_saveEmp.setForeground(java.awt.Color.darkGray);
        button_saveEmp.setText("Save File");
        button_saveEmp.setBorderPainted(false);
        button_saveEmp.setContentAreaFilled(false);
        button_saveEmp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        button_saveEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExitedB6(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnteredB6(evt);
            }
        });
        button_saveEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_saveEmpActionPerformed(evt);
            }
        });

        button_loadEmp.setFont(new java.awt.Font("Avenir Next", 0, 13)); // NOI18N
        button_loadEmp.setForeground(java.awt.Color.darkGray);
        button_loadEmp.setText("Load File");
        button_loadEmp.setBorderPainted(false);
        button_loadEmp.setContentAreaFilled(false);
        button_loadEmp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        button_loadEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExitedB7(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnteredB7(evt);
            }
        });
        button_loadEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_loadEmpActionPerformed(evt);
            }
        });

        button_exit.setFont(new java.awt.Font("Avenir Next", 0, 13)); // NOI18N
        button_exit.setForeground(java.awt.Color.darkGray);
        button_exit.setText("Exit Program");
        button_exit.setBorderPainted(false);
        button_exit.setContentAreaFilled(false);
        button_exit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        button_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExitedB8(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnteredB8(evt);
            }
        });
        button_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addContainerGap(292, Short.MAX_VALUE)
                        .addComponent(button_editEmp, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button_saveEmp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                            .addComponent(button_exit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button_loadEmp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(buttonPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(button_addEmp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_searchEmp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_removeEmp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_displayEmp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(324, Short.MAX_VALUE)))
        );

        buttonPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {button_addEmp, button_displayEmp, button_editEmp, button_exit, button_loadEmp, button_removeEmp, button_saveEmp, button_searchEmp});

        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_editEmp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_saveEmp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_loadEmp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_exit)
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(buttonPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(button_addEmp)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(button_searchEmp)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(button_removeEmp)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(button_displayEmp)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        buttonPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {button_addEmp, button_displayEmp, button_editEmp, button_exit, button_loadEmp, button_removeEmp, button_saveEmp, button_searchEmp});

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout mainMenuPanelLayout = new javax.swing.GroupLayout(mainMenuPanel);
        mainMenuPanel.setLayout(mainMenuPanelLayout);
        mainMenuPanelLayout.setHorizontalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainMenuPanelLayout.setVerticalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Sets an action for when each button is clicked
    private void button_addEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addEmpActionPerformed
        dispose();

        //opens the select employee type window
        new SelectEmpType().setVisible(true);
    }//GEN-LAST:event_button_addEmpActionPerformed

    private void button_loadEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_loadEmpActionPerformed
        dispose();

        //opens a file chooser
        loadWindow();
    }//GEN-LAST:event_button_loadEmpActionPerformed

    private void button_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_exitActionPerformed
        //opens a popup to confirm exit
        new ExitCheckFrame().setVisible(true);
    }//GEN-LAST:event_button_exitActionPerformed

    private void button_editEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_editEmpActionPerformed
        dispose();

        //opens an edit window
        new EditEmployeeSearchFrame().setVisible(true);
    }//GEN-LAST:event_button_editEmpActionPerformed

    private void button_searchEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_searchEmpActionPerformed
        dispose();

        //opens a search window
        new SearchEmployeeFrame().setVisible(true);
    }//GEN-LAST:event_button_searchEmpActionPerformed

    private void button_displayEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_displayEmpActionPerformed
        dispose();

        //opens window which displays all employees
        new DisplayEmployeeFrame().setVisible(true);
    }//GEN-LAST:event_button_displayEmpActionPerformed

    private void button_saveEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_saveEmpActionPerformed
        dispose();

        //opens window whcih saves file
        new SaveFrame().setVisible(true);
    }//GEN-LAST:event_button_saveEmpActionPerformed

    private void button_removeEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_removeEmpActionPerformed
        dispose();

        //opens search window for employee to remove
        new RemoveEmployeeFrame().setVisible(true);
    }//GEN-LAST:event_button_removeEmpActionPerformed

    //Changes the text colour of each button to white upon mouse enterance
    private void mouseEnteredB1(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEnteredB1
        button_addEmp.setForeground(Color.white);
    }//GEN-LAST:event_mouseEnteredB1

    private void mouseEnteredB2(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEnteredB2
        button_searchEmp.setForeground(Color.white);
    }//GEN-LAST:event_mouseEnteredB2

    private void mouseEnteredB3(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEnteredB3
        button_removeEmp.setForeground(Color.white);
    }//GEN-LAST:event_mouseEnteredB3

    private void mouseEnteredB4(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEnteredB4
        button_displayEmp.setForeground(Color.white);
    }//GEN-LAST:event_mouseEnteredB4

    private void mouseEnteredB5(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEnteredB5
        button_editEmp.setForeground(Color.white);
    }//GEN-LAST:event_mouseEnteredB5

    private void mouseEnteredB6(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEnteredB6
        button_saveEmp.setForeground(Color.white);
    }//GEN-LAST:event_mouseEnteredB6

    private void mouseEnteredB7(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEnteredB7
        // TODO add your handling code here:
        button_loadEmp.setForeground(Color.white);
    }//GEN-LAST:event_mouseEnteredB7

    private void mouseEnteredB8(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEnteredB8
        button_exit.setForeground(Color.white);
    }//GEN-LAST:event_mouseEnteredB8

    //Changes the text colour of each button to dark gray upon mouse exit
    private void mouseExitedB1(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExitedB1
        button_addEmp.setForeground(Color.darkGray);
    }//GEN-LAST:event_mouseExitedB1

    private void mouseExitedB2(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExitedB2
        button_searchEmp.setForeground(Color.darkGray);
    }//GEN-LAST:event_mouseExitedB2

    private void mouseExitedB3(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExitedB3
        button_removeEmp.setForeground(Color.darkGray);
    }//GEN-LAST:event_mouseExitedB3

    private void mouseExitedB4(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExitedB4
        button_displayEmp.setForeground(Color.darkGray);
    }//GEN-LAST:event_mouseExitedB4

    private void mouseExitedB5(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExitedB5
        button_editEmp.setForeground(Color.darkGray);
    }//GEN-LAST:event_mouseExitedB5

    private void mouseExitedB6(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExitedB6
        button_saveEmp.setForeground(Color.darkGray);
    }//GEN-LAST:event_mouseExitedB6

    private void mouseExitedB7(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExitedB7
        button_loadEmp.setForeground(Color.darkGray);
    }//GEN-LAST:event_mouseExitedB7

    private void mouseExitedB8(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExitedB8
        button_exit.setForeground(Color.darkGray);
    }//GEN-LAST:event_mouseExitedB8

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton button_addEmp;
    private javax.swing.JButton button_displayEmp;
    private javax.swing.JButton button_editEmp;
    private javax.swing.JButton button_exit;
    private javax.swing.JButton button_loadEmp;
    private javax.swing.JButton button_removeEmp;
    private javax.swing.JButton button_saveEmp;
    private javax.swing.JButton button_searchEmp;
    private javax.swing.JPanel mainMenuPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    //method to open a file chooser and load a file
    private void loadWindow() {
        
        //adds a file filter to the load window:
        class MyCustomFilter extends javax.swing.filechooser.FileFilter {

            @Override
            public boolean accept(File file) {
                // Allow only directories, or files with ".txt" extension
                return file.isDirectory() || file.getAbsolutePath().endsWith(".txt");
            }

            @Override
            public String getDescription() {
                // This description will be displayed in the dialog,
                return "Text documents (*.txt)";
            }
        }

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new MyCustomFilter());
        int result = fileChooser.showOpenDialog(null);
        switch (result) {
            
            //case if "open" button is clicked
            case JFileChooser.APPROVE_OPTION:
                
                ArrayList employeeInfo = new ArrayList< String>();

                //opens a BufferedReader to read information from the file
                try (BufferedReader br = new BufferedReader(new FileReader(fileChooser.getSelectedFile()))) {
                    StringBuilder sb = new StringBuilder();
                    String line = br.readLine();

                    //reads each line from the file into the ArrayList employeeInfo
                    while (line != null) {
                        sb.append(line);
                        sb.append(System.lineSeparator());
                        employeeInfo.add(line);
                        line = br.readLine();
                    }
                } catch (Exception e) {

                }
                
                for (int i = 0; i < employeeInfo.size(); i++) {
                    String newEmpInfo = employeeInfo.get(i).toString(); //used to hold information from each line that hasn't been read yet
                    int start; //start location for index of new string newEmpInfo
                    
                    //reads employee information from each line and stores it in appropriate variables:
                    String type = newEmpInfo.substring(0, newEmpInfo.indexOf("@"));
                    start = newEmpInfo.indexOf("@") + 1;
                    newEmpInfo = newEmpInfo.substring(start);

                    String empNum = newEmpInfo.substring(0, newEmpInfo.indexOf("@"));
                    start = newEmpInfo.indexOf("@") + 1;
                    newEmpInfo = newEmpInfo.substring(start);

                    String fName = newEmpInfo.substring(0, newEmpInfo.indexOf("@"));
                    start = newEmpInfo.indexOf("@") + 1;
                    newEmpInfo = newEmpInfo.substring(start);

                    String lName = newEmpInfo.substring(0, newEmpInfo.indexOf("@"));
                    start = newEmpInfo.indexOf("@") + 1;
                    newEmpInfo = newEmpInfo.substring(start);

                    String dRate = newEmpInfo.substring(0, newEmpInfo.indexOf("@"));
                    start = newEmpInfo.indexOf("@") + 1;
                    newEmpInfo = newEmpInfo.substring(start);

                    String sex = newEmpInfo.substring(0, newEmpInfo.indexOf("@"));
                    start = newEmpInfo.indexOf("@") + 1;
                    newEmpInfo = newEmpInfo.substring(start);

                    String workLoc = newEmpInfo.substring(0, newEmpInfo.indexOf("@"));
                    start = newEmpInfo.indexOf("@") + 1;
                    newEmpInfo = newEmpInfo.substring(start);

                    //converts variables to appropriate type:
                    int iEmpNum = Integer.parseInt(empNum);
                    double dDRate = Double.parseDouble(dRate) / 100;
                    int iSex = Integer.parseInt(sex);
                    int iWorkLoc = Integer.parseInt(workLoc);

                    //instantiates a new full time employee and adds it to the hash table:
                    if (type.equals("f")) {
                        String salary = newEmpInfo.substring(0, newEmpInfo.indexOf("@"));
                        start = newEmpInfo.indexOf("@") + 1;
                        newEmpInfo = newEmpInfo.substring(start);

                        double dSalary = Double.parseDouble(salary);
                        FullTimeEmployee newEmp = new FullTimeEmployee(iEmpNum, fName, lName, iSex, iWorkLoc, dDRate, dSalary);

                        MyHashTable hashTable = EmployeeDatabase.returnHashTable();

                        hashTable.addEmployee(newEmp);

                    
                    //instantiates a new full time employee and adds it to the hash table:
                    } else if (type.equals("p")) {
                        String hrWage = newEmpInfo.substring(0, newEmpInfo.indexOf("@"));
                        start = newEmpInfo.indexOf("@") + 1;
                        newEmpInfo = newEmpInfo.substring(start);

                        String hrWeek = newEmpInfo.substring(0, newEmpInfo.indexOf("@"));
                        start = newEmpInfo.indexOf("@") + 1;
                        newEmpInfo = newEmpInfo.substring(start);

                        String wkYear = newEmpInfo.substring(0, newEmpInfo.indexOf("@"));
                        start = newEmpInfo.indexOf("@") + 1;
                        newEmpInfo = newEmpInfo.substring(start);
                        double dHrWage = Double.parseDouble(hrWage);
                        double dHrWeek = Double.parseDouble(hrWeek);
                        double dWkYear = Double.parseDouble(wkYear);

                        PartTimeEmployee newEmp = new PartTimeEmployee(iEmpNum, fName, lName, iSex, iWorkLoc, dDRate, dHrWage, dHrWeek, dWkYear);

                        MyHashTable hashTable = EmployeeDatabase.returnHashTable();

                        hashTable.addEmployee(newEmp);
                    }

                }

                dispose();
                new MainMenu().setVisible(true);            //opens the Main Menu window
                new LoadSuccessfulFrame().setVisible(true); //opens "load successful" popup window

                break;

            //case if "cancel" button is clicked
            case JFileChooser.CANCEL_OPTION:
                dispose();
                new MainMenu().setVisible(true);            //opens the Main Menu window

                break;
        }
    }

}
